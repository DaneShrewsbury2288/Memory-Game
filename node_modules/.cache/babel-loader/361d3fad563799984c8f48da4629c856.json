{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dshre\\\\Memory-Game\\\\src\\\\App.js\";\n// Import all dependencies and files\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Container from \"./components/Container\";\nimport Footer from \"./components/Footer\";\nimport units from \"./units.json\";\nimport './App.css'; // Sets state to either 0 or empty\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      units,\n      clickedUnit: [],\n      score: 0\n    };\n\n    this.gameWin = () => {\n      alert(\"The Queen is pleased! You win! \");\n      this.resetGame();\n    };\n\n    this.resetGame = () => {\n      this.setState({\n        units: this.state.units.sort(function (a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedUnit: [],\n        score: 0\n      });\n    };\n\n    this.imageClick = event => {\n      const currentUnit = event.target.alt;\n      const UnitsAlreadyClicked = this.state.clickedUnit.indexOf(currentUnit) > -1; //if you click on a zerg unit that has already been selected, the game is reset and cards reordered\n\n      if (UnitsAlreadyClicked) {\n        this.resetGame();\n        alert(\"You lose. Play again?\"); //if you click on an available zerg unit, your score is increased and cards reordered\n      } else {\n        if (this.state.score === 11) {\n          this.gameWin();\n        } else {\n          this.setState({\n            units: this.state.units.sort(function (a, b) {\n              return 0.5 - Math.random();\n            }),\n            // When you click a new unit, it adds it to the clickedUnit Array. \n            clickedUnit: this.state.clickedUnit.concat(currentUnit),\n            score: this.state.score + 1\n          });\n        }\n      }\n\n      ;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.units.map(unit => React.createElement(Container, {\n      imageClick: this.imageClick,\n      id: unit.id,\n      key: unit.id,\n      name: unit.name,\n      image: unit.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\dshre\\Memory-Game\\src\\App.js"],"names":["React","Component","Navbar","Header","Container","Footer","units","App","state","clickedUnit","score","gameWin","alert","resetGame","setState","sort","a","b","Math","random","imageClick","event","currentUnit","target","alt","UnitsAlreadyClicked","indexOf","concat","render","map","unit","id","name","image"],"mappings":"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","sourcesContent":["// Import all dependencies and files\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Container from \"./components/Container\";\nimport Footer from \"./components/Footer\";\nimport units from \"./units.json\";\nimport './App.css';\n\n\n// Sets state to either 0 or empty\nclass App extends Component {\n  state = {\n    units,\n    clickedUnit: [],\n    score: 0\n  };\n\n  gameWin = () => {\n    alert(\"The Queen is pleased! You win! \");\n    this.resetGame();\n  };\n\n  resetGame = () => {\n    this.setState({\n      units: this.state.units.sort(function (a, b) {\n        return 0.5 - Math.random();\n      }),\n      clickedUnit: [],\n      score: 0\n    });\n  };\n\n  //when you click on a card ... the zerg unit is taken out of the array\n  imageClick = event => {\n    const currentUnit = event.target.alt;\n    const UnitsAlreadyClicked = this.state.clickedUnit.indexOf(currentUnit) > -1;\n \n    //if you click on a zerg unit that has already been selected, the game is reset and cards reordered\n    if (UnitsAlreadyClicked) {\n      this.resetGame();\n      alert(\"You lose. Play again?\");\n      //if you click on an available zerg unit, your score is increased and cards reordered\n    } else {\n      if (this.state.score === 11) {\n        this.gameWin();\n      } else {\n        this.setState({\n          units: this.state.units.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          // When you click a new unit, it adds it to the clickedUnit Array. \n          clickedUnit: this.state.clickedUnit.concat(currentUnit),\n          score: this.state.score + 1\n        });\n      }\n    };\n  }\n\n\n  render() {\n    return (\n      <div className=\"bg\">\n        <Navbar\n          score={this.state.score}\n        />\n        <Header />\n        <div className=\"wrapper\">\n          {this.state.units.map(unit => (\n            <Container\n              imageClick={this.imageClick}\n              id={unit.id}\n              key={unit.id}\n              name={unit.name}\n              image={unit.image}\n            />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}